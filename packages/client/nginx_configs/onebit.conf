# "express" — это произвольное название
upstream express {
    # "server" — это название хоста в сети docker compose
    server server:3001;
}

server {
    listen [::]:80 backlog=2048 ipv6only=off;
    # server_name domain.tld www.domain.tld
    return 301 https://$host$request_uri;
}

server {
    listen [::]:443 ssl http2 backlog=2048 ipv6only=off;
    # server_name domain.tld www.domain.tld
    ssl_certificate     /etc/ssl/certs/fullchain.pem;
    ssl_certificate_key /etc/ssl/private/privkey.pem;
    keepalive_timeout   70;

    location ~ /ping/(.*) {
        default_type application/json;
        return 200 '{"pong":$1, "time": "$date_gmt", "server_addr": "$server_addr"}';
    }

    location / {
        proxy_set_header      Host $host;
        proxy_set_header      X-Real-IP $http_x_real_ip;
        proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass            http://express/;
        proxy_set_header      X-Forwarded-Proto $scheme;
        proxy_set_header      Cache-Control no-cache;
        proxy_hide_header     X-Powered-By;
        client_max_body_size  128m;

        add_header            Last-Modified $date_gmt;
        add_header            Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age = 0';

        if_modified_since     off;
        expires               off;
        etag                  off;

        # add_header X-App-Env  testing;
    }
    location = /sw.js {
        root /app;
    }
    location ~ ^/assets/(.+)$ {
        root /app/assets;
        try_files /$1 =404;
        add_header Cache-Control no-cache;
        expires 3600s;
        add_header Pragma public;
        add_header Cache-Control "max-age=3600, public";
    }
    #location / {
#
    #}
    add_header X-Content-Type-Options "nosniff";

    ##
    # Logging
    ##

    access_log /var/log/nginx/onebit_access.log;
    error_log /var/log/nginx/onebit_error.log;

}
