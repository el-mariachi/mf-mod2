version: "3.9"

services:
    client:
      container_name: prakticum-client-local
      image: prakticum-client-local
      build:
          context: .
          dockerfile: Dockerfile.client
          args:
            CLIENT_PORT: ${CLIENT_PORT}
      restart: always
      depends_on:
        - postgres
      ports:
          - "${CLIENT_PORT}:80"
      environment:
        - CLIENT_PORT=${CLIENT_PORT}
        - SERVER_PORT=${SERVER_PORT}
      volumes:
        - ./tmp/logs:/var/log/nginx
        - ./packages/client/nginx_configs:/etc/nginx/conf.d
      networks:
        - onebit

    server:
      container_name: prakticum-server-local
      image: prakticum-server-local
      build:
          context: .
          dockerfile: Dockerfile.server
          args:
            SERVER_PORT: ${SERVER_PORT}
      command: ./wait-for.sh postgres:${POSTGRES_PORT} -- node index.js
      restart: always
      depends_on:
        - postgres
      ports:
          - "${SERVER_PORT}:${SERVER_PORT}"
      env_file: .env
      environment:
        NODE_ENV: production
        POSTGRES_HOST: postgres
      networks:
      - onebit

    postgres:
      container_name: prakticum-postgres-local
      image: postgres:14
      restart: always
      ports:
        - "${POSTGRES_PORT}:${POSTGRES_PORT}"
      environment:
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_DB: ${POSTGRES_DB}
      volumes:
        - ./tmp/pgdata:/var/lib/postgresql/data
      networks:
        - onebit

volumes:
  onebit_logs:

networks:
  onebit:
    driver: bridge
